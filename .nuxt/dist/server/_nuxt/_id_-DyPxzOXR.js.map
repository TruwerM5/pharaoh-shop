{"version":3,"file":"_id_-DyPxzOXR.js","sources":["../../../../virtual:public?%2Fimages%2Fchevron-prev.svg","../../../../virtual:public?%2Fimages%2Fchevron-next.svg","../../../../components/ProductImageVue.vue","../../../../components/AddToCartBtnVue.vue","../../../../virtual:public?%2Fimages%2Farrow-icon.svg","../../../../pages/products/[id].vue"],"sourcesContent":["import { publicAssetsURL } from '#internal/nuxt/paths';export default publicAssetsURL(\"/images/chevron-prev.svg\")","import { publicAssetsURL } from '#internal/nuxt/paths';export default publicAssetsURL(\"/images/chevron-next.svg\")","<script setup lang=\"ts\">\n\nconst props = defineProps<{images: string[];}>();\n\nconst currentIndex = ref(0);\n\nfunction moveCarousel(step: number) {\n    if(props.images.length < 2) {\n        return;\n    }\n\n    if(step > 0) {\n        if(currentIndex.value < props.images.length - 1) {\n            currentIndex.value++;\n        } else {\n            currentIndex.value = 0;\n        }\n        \n    } else if(step < 0) {\n        if(currentIndex.value > 0) {\n            currentIndex.value--;\n        } else {\n            currentIndex.value = props.images.length - 1;\n        }\n        \n    }\n    console.log(currentIndex.value);\n}\n\n\n</script>\n\n<template>\n    <div class=\"images-wrapper\">\n        <div class=\"product-images\">\n            <div class=\"product-images__content\"\n                :style=\"{transform: `translateX(${-currentIndex * 100}%)`}\">\n                <div v-for=\"image,i in images\" :key=\"i\"\n                class=\"product-images__item\">\n                    <img class=\"product-images__image\"\n                    :src=\"`/images/${image}`\" :alt=\"`Product${i+1}`\">\n                </div>\n            </div>    \n        </div>\n        <div v-if=\"images.length > 1\"\n        class=\"product-images__buttons\">\n            <button @click=\"moveCarousel(-1)\"\n            class=\"product-images__btn product-images__btn_prev\">\n                <img src=\"/images/chevron-prev.svg\" alt=\"Назад\" class=\"product-images__icon\">\n            </button>\n            <button @click=\"moveCarousel(1)\"\n            class=\"product-images__btn product-images__btn_next\">\n                <img src=\"/images/chevron-next.svg\" alt=\"Вперед\" class=\"product-images__icon\">\n            </button>\n        </div>\n    </div>\n</template>\n\n<style lang=\"sass\" scoped>\n.images-wrapper\n    position: relative\n    padding-inline: 20px\n.product-images\n    position: relative\n    overflow: hidden\n    &__content\n        position: relative\n        display: flex\n        justify-content: flex-start\n        align-items: stretch\n        transition: transform .2s ease-in-out\n    &__item\n        min-width: 100%\n    &__image\n        height: 100%\n        object-fit: cover\n    &__btn\n        position: absolute\n        top: 50%\n        transform: translateY(-50%)\n        &_prev\n            left: -10px\n        &_next\n            right: -10px\n    &__icon\n        width: 25px\n</style>","<script setup lang=\"ts\">\nimport type { RefSymbol } from '@vue/reactivity';\n\n\nconst isClicked = ref(false);\nfunction moveButton() {\n    if(isClicked.value) {\n        return;\n    }\n    isClicked.value = true;\n    setTimeout(() => {\n        isClicked.value = false;\n    }, 800)\n};\n\n</script>\n\n\n\n<template>\n    <button @click=\"moveButton\"\n    :class=\"['add-to-cart-btn', {'clicked': isClicked}]\">\n        <span :class=\"['add-to-cart-btn__inner', {'clicked': isClicked}]\">\n            <span \n            :class=\"['add-to-cart-btn__block']\">\n                <img class=\"add-to-cart-btn__icon\"\n                src=\"/images/cart-icon.svg\" alt=\"Добавить в корзину\">\n                <span class=\"add-to-cart-btn__text\">Добавить</span>\n            </span>\n            \n        </span>\n        <span \n        :class=\"['add-to-cart-btn__check', {'clicked': isClicked}]\">\n                <img :src=\"'/images/check-icon.svg'\" alt=\"Checked\" class=\"add-to-cart-btn__check-icon\">\n        </span>\n    </button>\n</template>\n\n<style lang=\"sass\" scoped>\n.add-to-cart-btn\n    position: relative\n    width: 100%\n    padding-block: 10px\n    gap: 7px\n    background-color: #000\n    border-radius: 5px\n    border: none\n    overflow: hidden\n    transition: background-color .5s ease-in-out\n    &.clicked\n        background-color: #03fc56\n    &__inner\n        position: relative\n        display: flex\n        justify-content: center\n        align-items: center\n        transition: transform .5s ease-in-out\n        &.clicked\n            transform: translateY(-60px)\n    &__icon\n        width: 35px\n    &__text\n        font-size: 20px\n        color: #fff\n    &__block\n        position: relative\n        display: flex\n        height: fit-content\n    &__check\n        position: absolute\n        bottom: 50%\n        transform: translateY(-60px)\n        left: 50%\n        transition: transform .5s ease-in-out\n        &.clicked\n            transform: translateY(50%)\n    &__check-icon\n        width: 20px\n\n</style>","import { publicAssetsURL } from '#internal/nuxt/paths';export default publicAssetsURL(\"/images/arrow-icon.svg\")","<script setup lang=\"ts\">\n//Product details page\n\nimport { useProductsStore } from '~/stores/products.store';\nimport { useCartStore } from '~/stores/cart.store';\n\n\n\nconst ProductStore = useProductsStore();\nconst CartStore = useCartStore();\nconst route = useRoute();\nconst errorMsg = ref('');\nconst currentSizeIndex = ref<number>();\n\nfunction setSizeIndex(sizeIndex: number) {\n    currentSizeIndex.value = sizeIndex;\n} \n\nfunction fetchProductById(id: string | string[]) {\n    return ProductStore.getById(Number(id));\n};\n\nconst product = ref(fetchProductById(route.params.id));\n\nif(!product.value) {\n    errorMsg.value = 'Товар не найден.';\n} else {\n    useHead({\n        title: product.value.name,\n    });\n\n    if(product.value.sizes) {\n        setSizeIndex(0);\n    }\n    \n}\n\nfunction addToCart() {\n    let size: undefined | string = undefined;\n\n    if(product.value) { //If product exists\n        if(product.value.sizes && currentSizeIndex.value != undefined) { //If product has sizes\n            size = product.value.sizes[currentSizeIndex.value];\n        } else { //If product doesn't have sizes (No size)\n            size = undefined;\n        }\n\n        CartStore.addToCart(product.value, size,  1);\n        console.log(\"Size: \", size);\n        console.log(\"Added product\", product.value);\n    }\n    \n}\n\n\n</script>\n\n<template>\n    <div class=\"product-details page\">\n        <div v-if=\"errorMsg\" class=\"error\">\n            <AlertVue>\n                <template #message>\n                    <span class=\"error__text\">{{ errorMsg }}</span>\n                </template>\n            </AlertVue>\n        </div>\n        <div v-else-if=\"product\" class=\"product-details__inner\">\n            <NuxtLink :to=\"{path: '/categories', query: {category: product.category}}\"\n            class=\"go-back-btn\">\n                <img class=\"go-back-btn__icon\"\n                src=\"/images/arrow-icon.svg\" alt=\"Назад\">\n            </NuxtLink>\n            <div class=\"product-info px-[30px]\">\n                <div class=\"carousel\">\n                    <ProductImageVue :images=\"product.images\" />\n                </div>\n                <div class=\"product-info__bottom\">\n                    <span class=\"block product-info__name\">\n                        {{ product.name }}\n                    </span>\n                    <span class=\"block product-info__price\">\n                        {{ product.price }}р.\n                    </span>\n                    <div class=\"product-info__colors\">\n                        <span class=\"product-info__color\">Цвет: </span>\n                        <span v-for=\"color,i in product.colors\" :key=\"i\"\n                        class=\"product-info__color\">\n                            {{ color }}\n                        </span>\n                    </div>\n                </div>\n                <div class=\"sizes\">\n                    <template v-if=\"product.sizes\">\n                        <button v-for=\"size,i in product.sizes\" :key=\"i\"\n                        @click=\"setSizeIndex(i)\"\n                        :class=\"['sizes__btn', {'selected': currentSizeIndex == i}]\">\n                            <span class=\"sizes__text\">\n                                {{ size }}\n                            </span>\n                        </button>\n                    </template>\n                    <template v-else>\n                        Без размера\n                    </template>\n                    \n                </div>\n                <AddToCartBtnVue @click=\"addToCart\" class=\"mt-[20px]\"/>\n            </div>\n            \n        </div>\n    </div>\n    \n</template>\n\n<style lang=\"sass\" scoped>\n\n.product-details\n    position: relative\n    \n.product-info\n    display: flex\n    flex-direction: column\n    gap: 10px\n    &__name\n        font-size: 20px\n    &__price\n        font-size: 22px\n    &__color\n        font-size: 14px\n.error\n    &__text\n        font-size: 20px\n\n.go-back-btn\n    position: absolute\n    top: 0\n    right: 30px\n    display: inline-block\n    padding: 5px\n    border: 1px solid #000\n\n\n.sizes\n    display: flex\n    align-items: center\n    flex-wrap: wrap\n    gap: 5px\n    &__title\n        font-size: 14px\n    &__text\n        font-size: 12px\n        text-transform: uppercase\n    &__btn\n        padding: 5px\n        width: 30px\n        height: 30px\n        display: flex\n        align-items: center\n        justify-content: center\n        border: 1px solid #000\n        transition: color .2s ease-in-out, background-color .2s ease-in-out\n        &.selected\n            color: #fff\n            background-color: #000\n</style>"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAuD,MAAe,eAAA,gBAAgB,0BAA0B;ACAzD,MAAe,aAAA,gBAAgB,0BAA0B;;;;;;;;ACI1G,UAAA,eAAe,IAAI,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;ACApB,UAAA,YAAY,IAAI,KAAK;;;;;;;;;;;;;;;ACJ4B,MAAe,aAAA,gBAAgB,wBAAwB;;;;;ACQ9G,UAAM,eAAe;AACrB,UAAM,YAAY;AAClB,UAAM,QAAQ;AACR,UAAA,WAAW,IAAI,EAAE;AACvB,UAAM,mBAAmB;AAEzB,aAAS,aAAa,WAAmB;AACrC,uBAAiB,QAAQ;AAAA,IAC7B;AAEA,aAAS,iBAAiB,IAAuB;AAC7C,aAAO,aAAa,QAAQ,OAAO,EAAE,CAAC;AAAA,IAC1C;AAEA,UAAM,UAAU,IAAI,iBAAiB,MAAM,OAAO,EAAE,CAAC;AAElD,QAAA,CAAC,QAAQ,OAAO;AACf,eAAS,QAAQ;AAAA,IAAA,OACd;AACK,cAAA;AAAA,QACJ,OAAO,QAAQ,MAAM;AAAA,MAAA,CACxB;AAEE,UAAA,QAAQ,MAAM,OAAO;AACpB,qBAAa,CAAC;AAAA,MAClB;AAAA,IAEJ;AAEA,aAAS,YAAY;AACjB,UAAI,OAA2B;AAE/B,UAAG,QAAQ,OAAO;AACd,YAAG,QAAQ,MAAM,SAAS,iBAAiB,SAAS,QAAW;AAC3D,iBAAO,QAAQ,MAAM,MAAM,iBAAiB,KAAK;AAAA,QAAA,OAC9C;AACI,iBAAA;AAAA,QACX;AAEA,kBAAU,UAAU,QAAQ,OAAO,MAAO,CAAC;AACnC,gBAAA,IAAI,UAAU,IAAI;AAClB,gBAAA,IAAI,iBAAiB,QAAQ,KAAK;AAAA,MAC9C;AAAA,IAEJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}