{"version":3,"file":"cart-C79jhGzv.js","sources":["../../../../virtual:public?%2Fimages%2Fminus-icon.svg","../../../../virtual:public?%2Fimages%2Fplus-icon.svg","../../../../components/cart/CartItemVue.vue","../../../../components/cart/CartListVue.vue","../../../../components/ModalWindowVue.vue","../../../../components/CheckoutVue.vue","../../../../pages/cart.vue"],"sourcesContent":["import { publicAssetsURL } from '#internal/nuxt/paths';export default publicAssetsURL(\"/images/minus-icon.svg\")","import { publicAssetsURL } from '#internal/nuxt/paths';export default publicAssetsURL(\"/images/plus-icon.svg\")","<script setup lang=\"ts\">    \n//Product in cart\nimport type { CartProduct } from '~/types/product';\nimport { useCartStore } from '~/stores/cart.store';\n\n\n\nconst props = defineProps<{cartproduct: CartProduct}>();\n\nconst CartStore = useCartStore();\n\nfunction decrement() {\n    if(props.cartproduct.quantity < 2) { // if true open modal to remove product from cart\n        onRemoveClick();\n        return;\n    }\n    props.cartproduct.quantity--; //else decrement quantity\n}\n\nfunction increment() {\n    if(props.cartproduct.quantity > 9) {\n        return;\n    }\n    props.cartproduct.quantity++;\n}\n\nfunction onRemoveClick() {\n    CartStore.setProductOnRemove(props.cartproduct.id, props.cartproduct.size);\n    CartStore.openModal();\n    console.log(\" On delete from cart item \", CartStore.productOnRemove);\n}\n\n\n</script>\n\n<template>\n    \n    <li class=\"product\">\n        <div class=\"product__content\">\n            <NuxtLink :to=\"{path: `/products/${cartproduct.id}`}\" class=\"product__link\">\n                <img :src=\"`/images/${cartproduct.images[0]}`\" \n                :alt=\"cartproduct.name\" class=\"product__image\">\n            </NuxtLink>\n            <div class=\"product__info\">\n                <span class=\"product__name block\">{{ cartproduct.name }}</span>\n                <span class=\"product__size block\">Размер: \n                    <span class=\"uppercase\">\n                    {{ cartproduct.size }}\n                    </span> \n                </span>\n                <span class=\"product__color block\">Цвет:\n                    <span v-for=\"color in cartproduct.colors\">{{color}}</span>\n                </span>\n                <div class=\"product__quantity-block\">\n                    <button @click=\"decrement\"\n                    class=\"product__btn product__btn_decrement\">\n                        <img src=\"/images/minus-icon.svg\" alt=\"Удалить\">\n                    </button>\n                    <span class=\"product__quantity\">{{ cartproduct.quantity }}</span>\n                    <button @click=\"increment\"\n                    class=\"product__btn product__btn_increment\">\n                        <img src=\"/images/plus-icon.svg\" alt=\"Добавить\">\n                    </button>\n                </div>\n            </div>\n            <button class=\"product__remove-btn\">\n                <img \n                src=\"/images/close-icon.svg\" \n                alt=\"Удалить из корзины\" \n                class=\"product__remove-icon\"\n                @click=\"onRemoveClick\">\n            </button>\n        </div>\n    </li>\n    \n    \n</template>\n\n<style lang=\"sass\" scoped>\n.product\n    position: relative\n    padding-block: 5px\n    border-bottom: 1px solid #000\n    &__content\n        display: grid\n        grid-template-columns: 100px 1fr\n        gap: 10px\n    &__image\n        height: 100px\n        width: 100%\n        object-fit: contain\n    &__info\n        display: flex\n        flex-direction: column\n        gap: 2px\n        justify-content: flex-start\n        align-items: flex-start\n    &__name\n        font-size: 14px\n    &__size,&__color\n        font-size: 12px\n    &__quantity-block\n        display: flex\n        align-items: center\n        gap: 20px\n        margin-top: auto\n    &__quantity\n        font-size: 20px\n    &__remove-btn\n        position: absolute\n        top: 5px\n        right: 5px\n        padding: 3px\n    &__remove-icon\n        width: 12px\n    &__btn\n        width: 22px\n        height: 22px\n        display: flex\n        justify-content: center\n        align-items: center\n        border: 1px solid #000\n        &_increment\n            background-color: #000\n\n.hide-product-enter-active,\n.hide-product-leave-active\n    position: relative\n\n.hide-product-leave-to\n    left: 200px\n    opacity: 0\n</style>","<script setup lang=\"ts\">\n//Wrapper for products in cart\nimport type { CartProduct } from '~/types/product';\nimport { useCartStore } from '#imports';\n\n\nconst props = defineProps<{cartList: CartProduct[]}>();\n\nconst CartStore = useCartStore();\n\n\n</script>\n\n\n<template>\n    <div class=\"cart-list\">\n        <ul class=\"cart-list__content\">\n            <TransitionGroup name=\"hide\">\n                <CartItemVue v-for=\"item in cartList\" :key=\"item.id\" :cartproduct=\"item\" class=\"cart-list__item\" />\n            </TransitionGroup>\n        </ul>\n    </div>\n</template>\n\n<style scoped lang=\"sass\">\n.cart-list\n    position: relative\n    &__content\n        display: flex\n        flex-direction: column\n        gap: 10px\n    &__item\n        transition: all .5s ease-in-out\n\n    \n// .hide-move,\n// .hide-leave-active\n//     transition: all .5s ease\n\n// .hide-leave-to\n//     opacity: 0\n//     transform: translateX(100%)\n\n// .hide-leave-active\n//     position: fixed\n//     left: 0\n//     top: auto\n//     bottom: auto\n.hide-move,\n.hide-leave-active,\n.hide-enter-active\n    position: absolute\n    transition: all 1s ease-in-out\n\n.hide-leave-to\n    opacity: 0\n    transform: translateX(50%)\n\n.hide-leave-active\n    position: relative\n    width: 100%\n    top: 50%\n    bottom: 50%\n\n.hide-enter, .hide-leave-to\n    opacity: 0\n\n.hide-leave-to\n    transform: translateX(100%)\n</style>","<script setup lang=\"ts\">\n//Cart modal window\n\nimport { useCartStore } from '~/stores/cart.store';\n\nconst CartStore = useCartStore();\n\nfunction cancel() {\n    CartStore.closeModal();\n}\n\nfunction remove() {\n    CartStore.removeFromCart();\n}\n\n</script>\n\n<template>\n    <div :class=\"['modal-wrapper', {'opened': CartStore.isModalOpened}]\">\n        <div class=\"modal\">\n            <span class=\"modal__message\">\n                Удалить товар из корзины?\n            </span>\n            <div class=\"modal__buttons\">\n                <button @click=\"cancel\"\n                class=\"modal__btn modal__btn_cancel\">\n                     Нет\n                </button>\n                <button @click=\"remove\"\n                class=\"modal__btn modal__btn_accept\">\n                     Да\n                </button>\n            </div>\n            <button @click=\"cancel\"\n            class=\"modal__close-btn\">\n                <img src=\"/images/close-icon.svg\" alt=\"Закрыть\">\n            </button>\n        </div>\n    </div>\n</template>\n\n<style lang=\"sass\" scoped>\n\n.modal-wrapper\n    position: fixed\n    top: 0\n    left: 100%\n    width: 100%\n    height: 100%\n    display: grid\n    place-items: center\n    background-color: rgba(0, 0, 0, 0.5)\n    z-index: -10\n    transition: left .2s ease-in-out\n    &.opened\n        left: 0\n        z-index: 10\n\n.modal\n    position: relative\n    padding: 40px 30px\n    background-color: #fff\n    &__message\n        display: block\n        font-size: 18px\n        margin-bottom: 10px\n    &__close-btn\n        position: absolute\n        right: 5px\n        top: 5px\n        padding: 3px\n        border: 1px solid #000\n    &__buttons\n        display: flex\n        justify-content: space-around\n    &__btn\n        display: block\n        height: 40px\n        width: 100px\n        font-size: 16px\n        border: 1px solid #000\n        &_cancel\n            background-color: #000\n            color: #fff\n</style>","<script setup lang=\"ts\">\n\nimport { useCartStore } from '#imports';\nconst CartStore = useCartStore();\n\n\n</script>\n\n\n\n<template>\n    <div class=\"checkout\">\n        <button class=\"checkout__close-btn\" @click=\"CartStore.closeCheckout\">\n            <img src=\"/images/close-icon.svg\" alt=\"Отмена\">\n        </button>\n        <div class=\"checkout__inner\">\n            <form @submit.prevent class=\"checkout__form form\">\n                <div class=\"checkout__block\">\n                    <span class=\"checkout__label\">Имя: </span>\n                    <input type=\"text\" name=\"username\" id=\"username\" class=\"checkout__input\">\n                </div>\n                <div class=\"checkout__block\">\n                    <span class=\"checkout__label\">Номер телефона: </span>\n                    <input type=\"text\" name=\"phone_number\" id=\"phone_number\" class=\"checkout__input\">\n                </div>\n                <div class=\"checkout__block\">\n                    <span class=\"checkout__label\">Город: </span>\n                    <input type=\"text\" name=\"city\" id=\"address\" class=\"checkout__input\">\n                </div>\n                <div class=\"checkout__block\">\n                    <span class=\"checkout__label\">Улица: </span>\n                    <input type=\"text\" name=\"street\" id=\"street\" class=\"checkout__input\">\n                </div>\n                <div class=\"checkout__block\">\n                    <span class=\"checkout__label\">№ дома: </span>\n                    <input type=\"text\" name=\"house\" id=\"house\" class=\"checkout__input\">\n                </div>\n                <div class=\"checkout__block\">\n                    <span class=\"checkout__label\">№ квартиры: </span>\n                    <input type=\"text\" name=\"flat\" id=\"flat\" class=\"checkout__input\">\n                </div>\n                <div class=\"checkout__block\">\n                    <span class=\"checkout__label\">Комментарий: </span>\n                    <input type=\"text\" name=\"flat\" id=\"flat\" class=\"checkout__input\">\n                </div>\n            </form>\n        </div>\n    </div>\n</template>\n\n<style lang=\"sass\" scoped>\n.checkout\n    position: fixed\n    top: 0\n    left: 0\n    width: 100%\n    height: 100%\n    z-index: 10\n    background-color: #fff\n</style>","<script setup lang=\"ts\">\n//Cart page\nimport { useCartStore } from '~/stores/cart.store';\nconst CartStore = useCartStore();\n\n</script>\n\n<template>\n        \n        <div class=\"cart page h-full\">\n            <h1 class=\"cart__title page-title\">Корзина ({{ CartStore.getCartCount }})</h1>\n            <template v-if=\"CartStore.getCartCount == 0\">\n                <AlertVue>\n                    <template #message>\n                        <span class=\"cart__message text-[25px] text-left\">В корзине нет товаров</span>\n                    </template>\n                </AlertVue>\n            </template>\n            <div v-else class=\"cart__inner h-full\">\n                <ScrollVue class=\"flex flex-col flex-1\">\n                    <template #content>\n                        <div class=\"flex flex-col justify-between h-full flex-1\">\n                            <CartListVue :cart-list=\"CartStore.cart\" />\n                            <button @click=\"CartStore.openCheckout\"\n                            class=\"cart__open-checkout primary-button\">Заказать</button>\n                        </div>\n                        \n                    </template>\n                </ScrollVue>\n            </div>\n            <ModalWindowVue />\n            <Transition name=\"checkout\" >\n                <CheckoutVue v-if=\"CartStore.isCheckoutOpened\" />\n            </Transition>\n        </div>\n</template>\n\n<style lang=\"sass\" scoped>\n.cart\n    display: flex\n    flex-direction: column\n    flex: 1\n    &__inner\n        flex: 1\n        display: flex\n        flex-direction: column\n\n\n.checkout-leave-active,\n.checkout-enter-active\n    transition: all .2s\n\n.checkout-enter-from,\n.checkout-leave-to\n    transform: translateY(30px)\n    opacity: 0\n</style>"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAuD,MAAe,aAAA,gBAAgB,wBAAwB;ACAvD,MAAe,aAAA,gBAAgB,uBAAuB;;;;;;;;ACS3F,iBAAa;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDb,iBAAa;;;;;;;;;;;;;;;;;;;;;;;;;;ACH/B,UAAM,YAAY;;;;;;;;;;;;;;;;;;;ACFA,iBAAa;;;;;;;;;;;;;;;;;ACA/B,UAAM,YAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}