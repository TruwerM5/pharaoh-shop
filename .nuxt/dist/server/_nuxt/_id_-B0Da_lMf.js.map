{"version":3,"file":"_id_-B0Da_lMf.js","sources":["../../../../stores/images.store.ts","../../../../components/ProductImageBigVue.vue","../../../../virtual:public?%2Fimages%2Fchevron-prev.svg","../../../../virtual:public?%2Fimages%2Fchevron-next.svg","../../../../components/ProductImageVue.vue","../../../../components/AddToCartBtnVue.vue","../../../../virtual:public?%2Fimages%2Farrow-icon.svg","../../../../pages/products/[id].vue"],"sourcesContent":["\nexport const useImagesStore = defineStore('useImagesStore', {\n    state: () => ({    \n        currentIndex: 0,\n        isGalleryOpened: false,\n    }),\n    actions: {\n        setCurrentIndex(index: number) {\n            this.currentIndex = index;\n        },\n        openGallery() {\n            this.isGalleryOpened = true;\n        },\n        closeGallery() {\n            this.isGalleryOpened = false;\n        }\n    }\n})","<script setup lang=\"ts\">\n\nimport { useImagesStore } from '~/stores/images.store';\n\nconst ImagesStore = useImagesStore();\ndefineProps<{images: string[];}>();\n\n\n</script>\n\n<template>\n    <div v-if=\"ImagesStore.isGalleryOpened\"\n    class=\"images-details\">\n        <div class=\"images-details__inner snap-x snap-mandatory\">\n            <ul class=\"images-details__list\" :style=\"{transform: `translateX(${-ImagesStore.currentIndex * 100}%)`}\">\n                <li v-for=\"image,i in images\" :key=\"i\"\n                class=\"images-details__item snap-center block min-h-full\">\n                    <img :src=\"`/images/${image}`\" :alt=\"`${image}`\" class=\"images-details__image\">\n                </li>\n            </ul>\n        </div>\n        <div class=\"images-details__buttons\">\n            <button v-for=\"icon,i in images\" :key=\"i\"\n            @click=\"ImagesStore.setCurrentIndex(i)\"\n            :class=\"['images-details__btn', {'active': ImagesStore.currentIndex == i}]\">\n                <img :src=\"`/images/${icon}`\" :alt=\"`${i}`\" class=\"images-details__btn-icon\">\n            </button>\n        </div>\n        <button @click=\"ImagesStore.closeGallery\"\n        class=\"images-details__close-btn\">\n            <img src=\"/images/close-icon.svg\" alt=\"Закрыть\" class=\"images-details__icon\">\n        </button>\n    </div>\n</template>\n\n<style lang=\"sass\" scoped>\n.images-details\n    position: fixed\n    top: 0\n    left: 0\n    width: 100%\n    height: 100%\n    padding: 50px 40px\n    display: flex\n    flex-direction: column\n    justify-content: center\n    z-index: 10\n    background-color: #fff\n    // overflowx-x: scroll\n    // overflow-y: hidden\n    &__inner\n        position: relative\n        overflow-x: scroll\n        overflow-y: hidden\n        &::-webkit-scrollbar\n            display: none\n    &__list\n        margin-bottom: 15px\n        display: flex\n        gap: 15px\n        transition: transform .2s ease-in-out\n    &__item\n        min-width: 100%\n    &__buttons\n        display: flex\n        justify-content: center\n        gap: 8px\n    &__btn\n        position: relative\n        border-radius: 5px\n        width: 40px\n        height: 40px\n        &.active\n            &::after\n                content: ''\n                display: block\n                position: absolute\n                bottom: -7px\n                width: 100%\n                height: 3px\n                background-color: #000 \n                border-radius: 2px\n    &__btn-icon\n        width: 40px\n        height: 40px\n        object-fit: cover\n        object-position: center center\n    &__close-btn\n        position: absolute\n        right: 20px\n        top: 20px\n    &__image\n        height: 100%\n        object-fit: cover\n</style>","import { publicAssetsURL } from '#internal/nuxt/paths';export default publicAssetsURL(\"/images/chevron-prev.svg\")","import { publicAssetsURL } from '#internal/nuxt/paths';export default publicAssetsURL(\"/images/chevron-next.svg\")","<script setup lang=\"ts\">\n\nimport { useImagesStore } from '~/stores/images.store';\n\nconst props = defineProps<{images: string[];}>();\n\nconst ImagesStore = useImagesStore();\n\nconst currentIndex = ref(0);\n\nfunction moveCarousel(step: number) {\n    if(props.images.length < 2) {\n        return;\n    }\n\n    if(step > 0) {\n        if(currentIndex.value < props.images.length - 1) {\n            currentIndex.value++;\n        } else {\n            currentIndex.value = 0;\n        }\n        \n    } else if(step < 0) {\n        if(currentIndex.value > 0) {\n            currentIndex.value--;\n        } else {\n            currentIndex.value = props.images.length - 1;\n        }\n        \n    }\n\n    ImagesStore.setCurrentIndex(currentIndex.value);\n}\n\n\n</script>\n\n<template>\n    <div class=\"images-wrapper\">\n        <div class=\"product-images\">\n            <div class=\"product-images__content\"\n                :style=\"{transform: `translateX(${-ImagesStore.currentIndex * 100}%)`}\">\n                <div v-for=\"image,i in images\" :key=\"i\"\n                class=\"product-images__item\">\n                    <img class=\"product-images__image\"\n                    :src=\"`/images/${image}`\" :alt=\"`Product${i+1}`\"\n                    @click=\"ImagesStore.openGallery\">\n                </div>\n            </div>    \n        </div>\n        <div v-if=\"images.length > 1\"\n        class=\"product-images__buttons\">\n            <button @click=\"moveCarousel(-1)\"\n            class=\"product-images__btn product-images__btn_prev\">\n                <img src=\"/images/chevron-prev.svg\" alt=\"Назад\" class=\"product-images__icon\">\n            </button>\n            <button @click=\"moveCarousel(1)\"\n            class=\"product-images__btn product-images__btn_next\">\n                <img src=\"/images/chevron-next.svg\" alt=\"Вперед\" class=\"product-images__icon\">\n            </button>\n        </div>\n    </div>\n</template>\n\n<style lang=\"sass\" scoped>\n.images-wrapper\n    position: relative\n    padding-inline: 20px\n.product-images\n    position: relative\n    overflow: hidden\n    &__content\n        position: relative\n        max-height: fit-content\n        display: flex\n        justify-content: flex-start\n        align-items: center\n        transition: transform .2s ease-in-out\n    &__item\n        min-width: 100%\n        object-fit: cover\n    &__btn\n        position: absolute\n        top: 50%\n        transform: translateY(-50%)\n        &_prev\n            left: -10px\n        &_next\n            right: -10px\n    &__icon\n        width: 25px\n    &__image\n        min-height: 100%\n        object-fit: cover\n        cursor: pointer\n</style>","<script setup lang=\"ts\">\nimport type { RefSymbol } from '@vue/reactivity';\n\n\nconst isClicked = ref(false);\nfunction moveButton() {\n    if(isClicked.value) {\n        return;\n    }\n    isClicked.value = true;\n    setTimeout(() => {\n        isClicked.value = false;\n    }, 800)\n};\n\n</script>\n\n\n\n<template>\n    <button @click=\"moveButton\"\n    :class=\"['add-to-cart-btn primary-button', {'clicked': isClicked}]\">\n    <span class=\"add-to-cart-btn__wrapper\">\n        <span :class=\"['add-to-cart-btn__inner', {'clicked': isClicked}]\">\n            <span \n            :class=\"['add-to-cart-btn__block']\">\n                <img class=\"add-to-cart-btn__icon\"\n                src=\"/images/cart-icon.svg\" alt=\"Добавить в корзину\">\n                <span class=\"add-to-cart-btn__text\">В корзину</span>\n            </span>\n            \n        </span>\n        <span \n        :class=\"['add-to-cart-btn__check', {'clicked': isClicked}]\">\n                <img :src=\"'/images/check-icon.svg'\" alt=\"Checked\" class=\"add-to-cart-btn__check-icon\">\n        </span>\n    </span>\n        \n    </button>\n</template>\n\n<style lang=\"sass\" scoped>\n.add-to-cart-btn\n    gap: 7px\n    border: none\n    transition: background-color .5s ease-in-out\n    &.clicked\n        background-color: #03fc56\n        &::after\n            border-color: #03fc56\n    &__wrapper\n        position: relative\n        display: block\n        overflow: hidden\n    &__inner\n        position: relative\n        display: flex\n        justify-content: center\n        align-items: center\n        transition: transform .5s ease-in-out\n        &.clicked\n            transform: translateY(-60px)\n    &__icon\n        width: 35px\n    &__text\n        font-size: 16px\n        color: #fff\n    &__block\n        position: relative\n        display: flex\n        align-items: center\n        gap: 5px\n        height: fit-content\n    &__check\n        position: absolute\n        bottom: 50%\n        transform: translateY(-60px)\n        left: 50%\n        transition: transform .5s ease-in-out\n        &.clicked\n            transform: translateY(50%)\n    &__check-icon\n        width: 20px\n\n</style>","import { publicAssetsURL } from '#internal/nuxt/paths';export default publicAssetsURL(\"/images/arrow-icon.svg\")","<script setup lang=\"ts\">\n//Product details page\n\nimport { useProductsStore } from '~/stores/products.store';\nimport { useCartStore } from '~/stores/cart.store';\n\n\n\nconst ProductStore = useProductsStore();\nconst CartStore = useCartStore();\nconst route = useRoute();\nconst errorMsg = ref('');\nconst currentSizeIndex = ref<number>();\n\n\nfunction setSizeIndex(sizeIndex: number) {\n    currentSizeIndex.value = sizeIndex;\n} \n\nfunction fetchProductById(id: string | string[]) {\n    return ProductStore.getById(Number(id));\n};\n\nconst product = ref(fetchProductById(route.params.id));\n\nif(!product.value) {\n    errorMsg.value = 'Товар не найден.';\n} else {\n    useHead({\n        title: product.value.name,\n    });\n\n    if(product.value.sizes) {\n        setSizeIndex(0);\n    }\n    \n}\n\nfunction addToCart() {\n    let size: undefined | string = undefined;\n\n    if(product.value) { //If product exists\n        if(product.value.sizes && currentSizeIndex.value != undefined) { //If product has sizes\n            size = product.value.sizes[currentSizeIndex.value];\n        } else { //If product doesn't have sizes (No size)\n            size = undefined;\n        }\n\n        CartStore.addToCart(product.value, size,  1);\n    }\n    \n}\n\n\n</script>\n\n<template>\n    <div class=\"product-details page\">\n        <div v-if=\"errorMsg\" class=\"error\">\n            <AlertVue>\n                <template #message>\n                    <span class=\"error__text\">{{ errorMsg }}</span>\n                </template>\n            </AlertVue>\n        </div>\n        <div v-else-if=\"product\" class=\"product-details__inner\">\n            <ProductImageBigVue\n            :images=\"product.images\" />\n            <NuxtLink :to=\"{path: `/categories/${product.category}`,}\"\n            class=\"go-back-btn\">\n                <img class=\"go-back-btn__icon\"\n                src=\"/images/arrow-icon.svg\" alt=\"Назад\">\n            </NuxtLink>\n            <div class=\"product-info px-[30px]\">\n                <div class=\"carousel\">\n                    <ProductImageVue :images=\"product.images\" />\n                </div>\n                <div class=\"product-info__bottom\">\n                    <span class=\"block product-info__name\">\n                        {{ product.name }}\n                    </span>\n                    <span class=\"block product-info__price\">\n                        {{ product.price }}р.\n                    </span>\n                    <div class=\"product-info__colors\">\n                        <span class=\"product-info__color\">Цвет: </span>\n                        <span v-for=\"color,i in product.colors\" :key=\"i\"\n                        class=\"product-info__color\">\n                            {{ color }}\n                        </span>\n                    </div>\n                </div>\n                <div class=\"sizes\">\n                    <template v-if=\"product.sizes\">\n                        <button v-for=\"size,i in product.sizes\" :key=\"i\"\n                        @click=\"setSizeIndex(i)\"\n                        :class=\"['sizes__btn', {'selected': currentSizeIndex == i}]\">\n                            <span class=\"sizes__text\">\n                                {{ size }}\n                            </span>\n                        </button>\n                    </template>\n                    <template v-else>\n                        Без размера\n                    </template>\n                    \n                </div>\n                <AddToCartBtnVue @click=\"addToCart\" class=\"mt-[20px]\"/>\n            </div>\n            <div class=\"product-about px-[30px]\">\n                <span class=\"product-about__title\">О товаре</span>\n                <p class=\"product-about__text\">Lorem ipsum dolor sit amet consectetur adipisicing elit. \n                    Odio ab reprehenderit dolores minus beatae, aperiam \n                    voluptatem dicta in dolor, facilis et excepturi, \n                    distinctio quas debitis soluta at exercitationem \n                    labore quos.</p>\n            </div>\n        </div>\n    </div>\n    \n</template>\n\n<style lang=\"sass\" scoped>\n\n.product-details\n    position: relative\n    \n.product-info\n    display: flex\n    flex-direction: column\n    gap: 10px\n    &__name\n        font-size: 20px\n    &__price\n        font-size: 22px\n    &__color\n        font-size: 14px\n.error\n    &__text\n        font-size: 20px\n\n.go-back-btn\n    position: absolute\n    top: 0\n    right: 30px\n    display: inline-block\n    padding: 5px\n    border: 1px solid #000\n\n\n.sizes\n    display: flex\n    align-items: center\n    flex-wrap: wrap\n    gap: 5px\n    &__title\n        font-size: 14px\n    &__text\n        font-size: 12px\n        text-transform: uppercase\n    &__btn\n        padding: 5px\n        width: 30px\n        height: 30px\n        display: flex\n        align-items: center\n        justify-content: center\n        border: 1px solid #000\n        transition: color .2s ease-in-out, background-color .2s ease-in-out\n        &.selected\n            color: #fff\n            background-color: #000\n\n.product-about\n    margin-block: 35px\n    &__title\n        font-size: 26px\n    &__text\n        font-size: 16px\n</style>"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AACa,MAAA,iBAAiB,YAAY,kBAAkB;AAAA,EACxD,OAAO,OAAO;AAAA,IACV,cAAc;AAAA,IACd,iBAAiB;AAAA,EAAA;AAAA,EAErB,SAAS;AAAA,IACL,gBAAgB,OAAe;AAC3B,WAAK,eAAe;AAAA,IACxB;AAAA,IACA,cAAc;AACV,WAAK,kBAAkB;AAAA,IAC3B;AAAA,IACA,eAAe;AACX,WAAK,kBAAkB;AAAA,IAC3B;AAAA,EACJ;AACJ,CAAC;;;;;;;;ACbD,UAAM,cAAc;;;;;;;;;;;;;;;;;;;;;;;;;ACJmC,MAAe,eAAA,gBAAgB,0BAA0B;ACAzD,MAAe,aAAA,gBAAgB,0BAA0B;;;;;;;;ACMhH,UAAM,cAAc;AAEC,QAAI,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJpB,UAAA,YAAY,IAAI,KAAK;;;;;;;;;;;;;;;ACJ4B,MAAe,aAAA,gBAAgB,wBAAwB;;;;;ACQ9G,UAAM,eAAe;AACrB,UAAM,YAAY;AAClB,UAAM,QAAQ;AACR,UAAA,WAAW,IAAI,EAAE;AACvB,UAAM,mBAAmB;AAGzB,aAAS,aAAa,WAAmB;AACrC,uBAAiB,QAAQ;AAAA,IAC7B;AAEA,aAAS,iBAAiB,IAAuB;AAC7C,aAAO,aAAa,QAAQ,OAAO,EAAE,CAAC;AAAA,IAC1C;AAEA,UAAM,UAAU,IAAI,iBAAiB,MAAM,OAAO,EAAE,CAAC;AAElD,QAAA,CAAC,QAAQ,OAAO;AACf,eAAS,QAAQ;AAAA,IAAA,OACd;AACK,cAAA;AAAA,QACJ,OAAO,QAAQ,MAAM;AAAA,MAAA,CACxB;AAEE,UAAA,QAAQ,MAAM,OAAO;AACpB,qBAAa,CAAC;AAAA,MAClB;AAAA,IAEJ;AAEA,aAAS,YAAY;AACjB,UAAI,OAA2B;AAE/B,UAAG,QAAQ,OAAO;AACd,YAAG,QAAQ,MAAM,SAAS,iBAAiB,SAAS,QAAW;AAC3D,iBAAO,QAAQ,MAAM,MAAM,iBAAiB,KAAK;AAAA,QAAA,OAC9C;AACI,iBAAA;AAAA,QACX;AAEA,kBAAU,UAAU,QAAQ,OAAO,MAAO,CAAC;AAAA,MAC/C;AAAA,IAEJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}